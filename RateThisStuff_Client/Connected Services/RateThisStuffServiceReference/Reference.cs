//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RateThisStuff_Client.RateThisStuffServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SharedLibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> RatingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> Ratings {
            get {
                return this.RatingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingsField, value) != true)) {
                    this.RatingsField = value;
                    this.RaisePropertyChanged("Ratings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rating", Namespace="http://schemas.datacontract.org/2004/07/SharedLibrary")]
    [System.SerializableAttribute()]
    public partial class Rating : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RateThisStuff_Client.RateThisStuffServiceReference.Item ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RateThisStuff_Client.RateThisStuffServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateThisStuff_Client.RateThisStuffServiceReference.Item Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateThisStuff_Client.RateThisStuffServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/SharedLibrary")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AverageRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RateThisStuff_Client.RateThisStuffServiceReference.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> RatingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AverageRating {
            get {
                return this.AverageRatingField;
            }
            set {
                if ((this.AverageRatingField.Equals(value) != true)) {
                    this.AverageRatingField = value;
                    this.RaisePropertyChanged("AverageRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateThisStuff_Client.RateThisStuffServiceReference.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> Ratings {
            get {
                return this.RatingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingsField, value) != true)) {
                    this.RatingsField = value;
                    this.RaisePropertyChanged("Ratings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatingsCount {
            get {
                return this.RatingsCountField;
            }
            set {
                if ((this.RatingsCountField.Equals(value) != true)) {
                    this.RatingsCountField = value;
                    this.RaisePropertyChanged("RatingsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/SharedLibrary")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RateThisStuffServiceReference.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUser", ReplyAction="http://tempuri.org/IClientService/GetUserResponse")]
        RateThisStuff_Client.RateThisStuffServiceReference.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUser", ReplyAction="http://tempuri.org/IClientService/GetUserResponse")]
        System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserByUsername", ReplyAction="http://tempuri.org/IClientService/GetUserByUsernameResponse")]
        RateThisStuff_Client.RateThisStuffServiceReference.User GetUserByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserByUsername", ReplyAction="http://tempuri.org/IClientService/GetUserByUsernameResponse")]
        System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.User> GetUserByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllUsers", ReplyAction="http://tempuri.org/IClientService/GetAllUsersResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.User> GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllUsers", ReplyAction="http://tempuri.org/IClientService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.User>> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateUser", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateUserResponse")]
        bool SaveOrUpdateUser(RateThisStuff_Client.RateThisStuffServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateUser", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateUserResponse")]
        System.Threading.Tasks.Task<bool> SaveOrUpdateUserAsync(RateThisStuff_Client.RateThisStuffServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteUser", ReplyAction="http://tempuri.org/IClientService/DeleteUserResponse")]
        bool DeleteUser(RateThisStuff_Client.RateThisStuffServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteUser", ReplyAction="http://tempuri.org/IClientService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(RateThisStuff_Client.RateThisStuffServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCategory", ReplyAction="http://tempuri.org/IClientService/GetCategoryResponse")]
        RateThisStuff_Client.RateThisStuffServiceReference.Category GetCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCategory", ReplyAction="http://tempuri.org/IClientService/GetCategoryResponse")]
        System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Category> GetCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllCategories", ReplyAction="http://tempuri.org/IClientService/GetAllCategoriesResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Category> GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllCategories", ReplyAction="http://tempuri.org/IClientService/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Category>> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateCategory", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateCategoryResponse")]
        bool SaveOrUpdateCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateCategory", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateCategoryResponse")]
        System.Threading.Tasks.Task<bool> SaveOrUpdateCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteCategory", ReplyAction="http://tempuri.org/IClientService/DeleteCategoryResponse")]
        bool DeleteCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteCategory", ReplyAction="http://tempuri.org/IClientService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetItem", ReplyAction="http://tempuri.org/IClientService/GetItemResponse")]
        RateThisStuff_Client.RateThisStuffServiceReference.Item GetItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetItem", ReplyAction="http://tempuri.org/IClientService/GetItemResponse")]
        System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllItems", ReplyAction="http://tempuri.org/IClientService/GetAllItemsResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetAllItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllItems", ReplyAction="http://tempuri.org/IClientService/GetAllItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetAllItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllItemsByCategory", ReplyAction="http://tempuri.org/IClientService/GetAllItemsByCategoryResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetAllItemsByCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllItemsByCategory", ReplyAction="http://tempuri.org/IClientService/GetAllItemsByCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetAllItemsByCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetBestRatedItemsOfCategory", ReplyAction="http://tempuri.org/IClientService/GetBestRatedItemsOfCategoryResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetBestRatedItemsOfCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetBestRatedItemsOfCategory", ReplyAction="http://tempuri.org/IClientService/GetBestRatedItemsOfCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetBestRatedItemsOfCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMostRatedItemsOfCategory", ReplyAction="http://tempuri.org/IClientService/GetMostRatedItemsOfCategoryResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetMostRatedItemsOfCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMostRatedItemsOfCategory", ReplyAction="http://tempuri.org/IClientService/GetMostRatedItemsOfCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetMostRatedItemsOfCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateItem", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateItemResponse")]
        bool SaveOrUpdateItem(RateThisStuff_Client.RateThisStuffServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateItem", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateItemResponse")]
        System.Threading.Tasks.Task<bool> SaveOrUpdateItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteItem", ReplyAction="http://tempuri.org/IClientService/DeleteItemResponse")]
        bool DeleteItem(RateThisStuff_Client.RateThisStuffServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteItem", ReplyAction="http://tempuri.org/IClientService/DeleteItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRating", ReplyAction="http://tempuri.org/IClientService/GetRatingResponse")]
        RateThisStuff_Client.RateThisStuffServiceReference.Rating GetRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRating", ReplyAction="http://tempuri.org/IClientService/GetRatingResponse")]
        System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllRatings", ReplyAction="http://tempuri.org/IClientService/GetAllRatingsResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetAllRatings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllRatings", ReplyAction="http://tempuri.org/IClientService/GetAllRatingsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating>> GetAllRatingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllRatingsForItem", ReplyAction="http://tempuri.org/IClientService/GetAllRatingsForItemResponse")]
        System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetAllRatingsForItem(RateThisStuff_Client.RateThisStuffServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllRatingsForItem", ReplyAction="http://tempuri.org/IClientService/GetAllRatingsForItemResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating>> GetAllRatingsForItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateRating", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateRatingResponse")]
        bool SaveOrUpdateRating(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveOrUpdateRating", ReplyAction="http://tempuri.org/IClientService/SaveOrUpdateRatingResponse")]
        System.Threading.Tasks.Task<bool> SaveOrUpdateRatingAsync(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteRating", ReplyAction="http://tempuri.org/IClientService/DeleteRatingResponse")]
        bool DeleteRating(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteRating", ReplyAction="http://tempuri.org/IClientService/DeleteRatingResponse")]
        System.Threading.Tasks.Task<bool> DeleteRatingAsync(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        RateThisStuff_Client.RateThisStuffServiceReference.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ChangePassword", ReplyAction="http://tempuri.org/IClientService/ChangePasswordResponse")]
        bool ChangePassword(string oldPassword, string newPassword, RateThisStuff_Client.RateThisStuffServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ChangePassword", ReplyAction="http://tempuri.org/IClientService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string oldPassword, string newPassword, RateThisStuff_Client.RateThisStuffServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRatingFromUserForItem", ReplyAction="http://tempuri.org/IClientService/GetRatingFromUserForItemResponse")]
        RateThisStuff_Client.RateThisStuffServiceReference.Rating GetRatingFromUserForItem(RateThisStuff_Client.RateThisStuffServiceReference.User user, RateThisStuff_Client.RateThisStuffServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRatingFromUserForItem", ReplyAction="http://tempuri.org/IClientService/GetRatingFromUserForItemResponse")]
        System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetRatingFromUserForItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.User user, RateThisStuff_Client.RateThisStuffServiceReference.Item item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : RateThisStuff_Client.RateThisStuffServiceReference.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<RateThisStuff_Client.RateThisStuffServiceReference.IClientService>, RateThisStuff_Client.RateThisStuffServiceReference.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RateThisStuff_Client.RateThisStuffServiceReference.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public RateThisStuff_Client.RateThisStuffServiceReference.User GetUserByUsername(string username) {
            return base.Channel.GetUserByUsername(username);
        }
        
        public System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.User> GetUserByUsernameAsync(string username) {
            return base.Channel.GetUserByUsernameAsync(username);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.User> GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.User>> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public bool SaveOrUpdateUser(RateThisStuff_Client.RateThisStuffServiceReference.User user) {
            return base.Channel.SaveOrUpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> SaveOrUpdateUserAsync(RateThisStuff_Client.RateThisStuffServiceReference.User user) {
            return base.Channel.SaveOrUpdateUserAsync(user);
        }
        
        public bool DeleteUser(RateThisStuff_Client.RateThisStuffServiceReference.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(RateThisStuff_Client.RateThisStuffServiceReference.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public RateThisStuff_Client.RateThisStuffServiceReference.Category GetCategory(int id) {
            return base.Channel.GetCategory(id);
        }
        
        public System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Category> GetCategoryAsync(int id) {
            return base.Channel.GetCategoryAsync(id);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Category> GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Category>> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public bool SaveOrUpdateCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.SaveOrUpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> SaveOrUpdateCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.SaveOrUpdateCategoryAsync(category);
        }
        
        public bool DeleteCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.DeleteCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.DeleteCategoryAsync(category);
        }
        
        public RateThisStuff_Client.RateThisStuffServiceReference.Item GetItem(int id) {
            return base.Channel.GetItem(id);
        }
        
        public System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetItemAsync(int id) {
            return base.Channel.GetItemAsync(id);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetAllItems() {
            return base.Channel.GetAllItems();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetAllItemsAsync() {
            return base.Channel.GetAllItemsAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetAllItemsByCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.GetAllItemsByCategory(category);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetAllItemsByCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.GetAllItemsByCategoryAsync(category);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetBestRatedItemsOfCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.GetBestRatedItemsOfCategory(category);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetBestRatedItemsOfCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.GetBestRatedItemsOfCategoryAsync(category);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item> GetMostRatedItemsOfCategory(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.GetMostRatedItemsOfCategory(category);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Item>> GetMostRatedItemsOfCategoryAsync(RateThisStuff_Client.RateThisStuffServiceReference.Category category) {
            return base.Channel.GetMostRatedItemsOfCategoryAsync(category);
        }
        
        public bool SaveOrUpdateItem(RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.SaveOrUpdateItem(item);
        }
        
        public System.Threading.Tasks.Task<bool> SaveOrUpdateItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.SaveOrUpdateItemAsync(item);
        }
        
        public bool DeleteItem(RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.DeleteItem(item);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.DeleteItemAsync(item);
        }
        
        public RateThisStuff_Client.RateThisStuffServiceReference.Rating GetRating(int id) {
            return base.Channel.GetRating(id);
        }
        
        public System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetRatingAsync(int id) {
            return base.Channel.GetRatingAsync(id);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetAllRatings() {
            return base.Channel.GetAllRatings();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating>> GetAllRatingsAsync() {
            return base.Channel.GetAllRatingsAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetAllRatingsForItem(RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.GetAllRatingsForItem(item);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<RateThisStuff_Client.RateThisStuffServiceReference.Rating>> GetAllRatingsForItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.GetAllRatingsForItemAsync(item);
        }
        
        public bool SaveOrUpdateRating(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating) {
            return base.Channel.SaveOrUpdateRating(rating);
        }
        
        public System.Threading.Tasks.Task<bool> SaveOrUpdateRatingAsync(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating) {
            return base.Channel.SaveOrUpdateRatingAsync(rating);
        }
        
        public bool DeleteRating(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating) {
            return base.Channel.DeleteRating(rating);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRatingAsync(RateThisStuff_Client.RateThisStuffServiceReference.Rating rating) {
            return base.Channel.DeleteRatingAsync(rating);
        }
        
        public RateThisStuff_Client.RateThisStuffServiceReference.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool ChangePassword(string oldPassword, string newPassword, RateThisStuff_Client.RateThisStuffServiceReference.User user) {
            return base.Channel.ChangePassword(oldPassword, newPassword, user);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string oldPassword, string newPassword, RateThisStuff_Client.RateThisStuffServiceReference.User user) {
            return base.Channel.ChangePasswordAsync(oldPassword, newPassword, user);
        }
        
        public RateThisStuff_Client.RateThisStuffServiceReference.Rating GetRatingFromUserForItem(RateThisStuff_Client.RateThisStuffServiceReference.User user, RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.GetRatingFromUserForItem(user, item);
        }
        
        public System.Threading.Tasks.Task<RateThisStuff_Client.RateThisStuffServiceReference.Rating> GetRatingFromUserForItemAsync(RateThisStuff_Client.RateThisStuffServiceReference.User user, RateThisStuff_Client.RateThisStuffServiceReference.Item item) {
            return base.Channel.GetRatingFromUserForItemAsync(user, item);
        }
    }
}
